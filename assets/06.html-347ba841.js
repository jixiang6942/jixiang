const e=JSON.parse('{"key":"v-108c684c","path":"/blogs/base/06.html","title":"06-ES6~ES13","lang":"en-US","frontmatter":{"title":"06-ES6~ES13","date":"2024/01/20","tags":["JS"],"categories":["JS"]},"headers":[{"level":2,"title":"一，新特性一","slug":"一-新特性一","link":"#一-新特性一","children":[{"level":3,"title":"1. 解构","slug":"_1-解构","link":"#_1-解构","children":[]},{"level":3,"title":"3. let、const的使用","slug":"_3-let、const的使用","link":"#_3-let、const的使用","children":[]},{"level":3,"title":"4. 模板字符串","slug":"_4-模板字符串","link":"#_4-模板字符串","children":[]},{"level":3,"title":"5. ES6函数增强的用法","slug":"_5-es6函数增强的用法","link":"#_5-es6函数增强的用法","children":[]},{"level":3,"title":"6. 展开运算符的使用","slug":"_6-展开运算符的使用","link":"#_6-展开运算符的使用","children":[]},{"level":3,"title":"7. 进制和长数字","slug":"_7-进制和长数字","link":"#_7-进制和长数字","children":[]},{"level":3,"title":"7. Symbol类型用法","slug":"_7-symbol类型用法","link":"#_7-symbol类型用法","children":[]},{"level":3,"title":"8. 数据结构-Set集合","slug":"_8-数据结构-set集合","link":"#_8-数据结构-set集合","children":[]},{"level":3,"title":"9. 数据结构-Map映射","slug":"_9-数据结构-map映射","link":"#_9-数据结构-map映射","children":[]}]},{"level":2,"title":"二，新特性二","slug":"二-新特性二","link":"#二-新特性二","children":[{"level":3,"title":"1. ES7新增特性解析","slug":"_1-es7新增特性解析","link":"#_1-es7新增特性解析","children":[]},{"level":3,"title":"2. ES9新增特性解析","slug":"_2-es9新增特性解析","link":"#_2-es9新增特性解析","children":[]},{"level":3,"title":"3. ES10新增特性解析","slug":"_3-es10新增特性解析","link":"#_3-es10新增特性解析","children":[]},{"level":3,"title":"4. ES11新增特性解析","slug":"_4-es11新增特性解析","link":"#_4-es11新增特性解析","children":[]},{"level":3,"title":"5. ES12新增特性解析","slug":"_5-es12新增特性解析","link":"#_5-es12新增特性解析","children":[]},{"level":3,"title":"6. ES13新增特性解析","slug":"_6-es13新增特性解析","link":"#_6-es13新增特性解析","children":[]}]},{"level":2,"title":"三、Proxy和Reflect","slug":"三、proxy和reflect","link":"#三、proxy和reflect","children":[{"level":3,"title":"1. 监听对象的操作","slug":"_1-监听对象的操作","link":"#_1-监听对象的操作","children":[]},{"level":3,"title":"2. Proxy类基本使用","slug":"_2-proxy类基本使用","link":"#_2-proxy类基本使用","children":[]},{"level":3,"title":"3. Proxy常见捕获器","slug":"_3-proxy常见捕获器","link":"#_3-proxy常见捕获器","children":[]},{"level":3,"title":"4. Reflect介绍和作用","slug":"_4-reflect介绍和作用","link":"#_4-reflect介绍和作用","children":[]},{"level":3,"title":"5. Reflect的基本使用","slug":"_5-reflect的基本使用","link":"#_5-reflect的基本使用","children":[]},{"level":3,"title":"6. Reflect的receiver","slug":"_6-reflect的receiver","link":"#_6-reflect的receiver","children":[]}]},{"level":2,"title":"四，Promise使用详解","slug":"四-promise使用详解","link":"#四-promise使用详解","children":[{"level":3,"title":"1.  异步代码的困境","slug":"_1-异步代码的困境","link":"#_1-异步代码的困境","children":[]},{"level":3,"title":"2. 认识Promise作用","slug":"_2-认识promise作用","link":"#_2-认识promise作用","children":[]},{"level":3,"title":"3. Promise基本使用","slug":"_3-promise基本使用","link":"#_3-promise基本使用","children":[]},{"level":3,"title":"4. Promise状态变化","slug":"_4-promise状态变化","link":"#_4-promise状态变化","children":[]},{"level":3,"title":"5. Promise实例方法","slug":"_5-promise实例方法","link":"#_5-promise实例方法","children":[]},{"level":3,"title":"6. Promise的类方法","slug":"_6-promise的类方法","link":"#_6-promise的类方法","children":[]}]}],"git":{},"filePathRelative":"blogs/base/06.md"}');export{e as data};
