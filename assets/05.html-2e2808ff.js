const l=JSON.parse('{"key":"v-0ed78fad","path":"/blogs/base/05.html","title":"05-ES5和ES6继承","lang":"en-US","frontmatter":{"title":"05-ES5和ES6继承","date":"2024/05/05","tags":["JS"],"categories":["JS"]},"headers":[{"level":2,"title":"一，ES5实现继承","slug":"一-es5实现继承","link":"#一-es5实现继承","children":[{"level":3,"title":"1，对象和函数的原型","slug":"_1-对象和函数的原型","link":"#_1-对象和函数的原型","children":[]},{"level":3,"title":"2，new操作符和constructor","slug":"_2-new操作符和constructor","link":"#_2-new操作符和constructor","children":[]},{"level":3,"title":"3，原型链实现继承","slug":"_3-原型链实现继承","link":"#_3-原型链实现继承","children":[]},{"level":3,"title":"4，借用构造函数继承","slug":"_4-借用构造函数继承","link":"#_4-借用构造函数继承","children":[]},{"level":3,"title":"5，寄生组合实现继承","slug":"_5-寄生组合实现继承","link":"#_5-寄生组合实现继承","children":[]},{"level":3,"title":"6. ES5最终继承方案","slug":"_6-es5最终继承方案","link":"#_6-es5最终继承方案","children":[]},{"level":3,"title":"7. 对象的方法补充","slug":"_7-对象的方法补充","link":"#_7-对象的方法补充","children":[]}]},{"level":2,"title":"二，ES6实现继承","slug":"二-es6实现继承","link":"#二-es6实现继承","children":[{"level":3,"title":"1，原型继承关系图","slug":"_1-原型继承关系图","link":"#_1-原型继承关系图","children":[]},{"level":3,"title":"2，class方式定义类","slug":"_2-class方式定义类","link":"#_2-class方式定义类","children":[]},{"level":3,"title":"3， extends实现继承","slug":"_3-extends实现继承","link":"#_3-extends实现继承","children":[]},{"level":3,"title":"4，Babel的ES6转ES5","slug":"_4-babel的es6转es5","link":"#_4-babel的es6转es5","children":[]},{"level":3,"title":"5，面向对象多态理解","slug":"_5-面向对象多态理解","link":"#_5-面向对象多态理解","children":[]},{"level":3,"title":"6，手写call、apply和bind","slug":"_6-手写call、apply和bind","link":"#_6-手写call、apply和bind","children":[]}]}],"git":{},"filePathRelative":"blogs/base/05.md"}');export{l as data};
