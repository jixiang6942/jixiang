const e=JSON.parse('{"key":"v-2d7841a6","path":"/blogs/base/49.html","title":"49-前端面试题手写","lang":"en-US","frontmatter":{"title":"49-前端面试题手写","date":"2024/09/17","tags":["JS"],"categories":["JS"]},"headers":[{"level":2,"title":"前端常见面试题","slug":"前端常见面试题","link":"#前端常见面试题","children":[{"level":3,"title":"1，防抖(debounce)函数的手写","slug":"_1-防抖-debounce-函数的手写","link":"#_1-防抖-debounce-函数的手写","children":[]},{"level":3,"title":"2，节流(throttle)函数的手写","slug":"_2-节流-throttle-函数的手写","link":"#_2-节流-throttle-函数的手写","children":[]},{"level":3,"title":"3，手写数组高阶方法","slug":"_3-手写数组高阶方法","link":"#_3-手写数组高阶方法","children":[]},{"level":3,"title":"4，手写闭包","slug":"_4-手写闭包","link":"#_4-手写闭包","children":[]},{"level":3,"title":"5, 手写递归","slug":"_5-手写递归","link":"#_5-手写递归","children":[]},{"level":3,"title":"6，实现深拷贝和浅拷贝","slug":"_6-实现深拷贝和浅拷贝","link":"#_6-实现深拷贝和浅拷贝","children":[]},{"level":3,"title":"7，正则表达式","slug":"_7-正则表达式","link":"#_7-正则表达式","children":[]},{"level":3,"title":"8，ES5实现方法继承","slug":"_8-es5实现方法继承","link":"#_8-es5实现方法继承","children":[]},{"level":3,"title":"9，ES5实现方法继承","slug":"_9-es5实现方法继承","link":"#_9-es5实现方法继承","children":[]},{"level":3,"title":"100，手动实现react-redux中的Provider和connect。","slug":"_100-手动实现react-redux中的provider和connect。","link":"#_100-手动实现react-redux中的provider和connect。","children":[]}]}],"git":{},"filePathRelative":"blogs/base/49.md"}');export{e as data};
